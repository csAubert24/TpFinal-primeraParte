<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAO8bAgDvGwIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAEAAAABAAAAAQAAAAIAAAAAAAAAAwAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAABAAAAAAAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAAAA
        AAEAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAaAAAAWQAAABAAAAAhAAAAMgAAADAAAAAmAAAADgAA
        AF4AAAAeAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAIAAAAAAAAAAAAAAACAAAAAAAA
        AKcAAADUAAAAmQAAAIMAAAB3AAAAcwAAAHsAAACcAAAA2QAAAOMAAABDAAAACgAAAOEAAABZAAAAUAAA
        AOkAAAAQAAAAPwAAAOEAAADdAAAAogAAAIIAAAB2AAAAdQAAAIEAAACaAAAA1gAAAKAAAAAAAAAAAwAA
        AAMAAAAAAAAAtgAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/gAAAP8AAACiAAAABwAAAC4AAADdAAAA/wAA
        AFMAAABHAAAA/wAAAOEAAAAyAAAAAwAAAJsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAAsQAA
        AAAAAAADAAAAAwAAAAAAAAC0AAAA/wAAAPwAAAD9AAAA6gAAALwAAABpAAAADgAAAAcAAACPAAAA/wAA
        APoAAAD/AAAAVgAAAEoAAAD/AAAA+gAAAP8AAACQAAAABwAAAAwAAABmAAAAuwAAAOkAAAD9AAAA/AAA
        AP8AAACyAAAAAAAAAAMAAAADAAAAAAAAAL4AAADlAAAALwAAABgAAAAHAAAAAwAAAC0AAACSAAAA8wAA
        AP8AAAD8AAAA+QAAAP8AAABWAAAASgAAAP8AAAD6AAAA/AAAAP8AAAD0AAAAlQAAADAAAAAGAAAABwAA
        ABcAAAArAAAA5AAAALwAAAAAAAAAAwAAAAMAAAAAAAAAxgAAAL0AAAAAAAAAmAAAAL8AAADqAAAA/wAA
        AP8AAAD+AAAA/AAAAP4AAAD7AAAA/wAAAFcAAABKAAAA/wAAAPwAAAD+AAAA/AAAAP4AAAD/AAAA/wAA
        AO0AAADBAAAAmgAAAAAAAAC7AAAAxAAAAAAAAAADAAAAAwAAAAAAAADHAAAAtwAAAA4AAAD7AAAA/wAA
        AP4AAAD9AAAA+wAAAP4AAAD/AAAA/wAAAPsAAAD/AAAAVwAAAEoAAAD/AAAA+wAAAP8AAAD/AAAA/gAA
        APsAAAD9AAAA/wAAAP8AAAD9AAAAEgAAALcAAADFAAAAAAAAAAMAAAADAAAAAAAAAMcAAAC1AAAACgAA
        APcAAAD+AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABYAAAASgAAAP8AAAD7AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD9AAAA/gAAAPkAAAAOAAAAtAAAAMYAAAAAAAAAAwAAAAMAAAAAAAAAxwAA
        ALUAAAAKAAAA+gAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAFgAAABKAAAA/wAA
        APsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA/QAAAA8AAAC0AAAAxwAAAAAAAAADAAAAAwAA
        AAAAAADHAAAAtQAAAAkAAAD6AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAWAAA
        AEoAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD9AAAADwAAALQAAADHAAAAAAAA
        AAMAAAADAAAAAAAAAMcAAAC1AAAACQAAAPkAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAABYAAAASgAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAP0AAAAPAAAAtAAA
        AMcAAAAAAAAAAwAAAAMAAAAAAAAAxwAAALUAAAAIAAAA+QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD7AAAA/wAAAFgAAABKAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA/QAA
        AA8AAACzAAAAxwAAAAAAAAADAAAAAwAAAAAAAADHAAAAtAAAAAgAAAD4AAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAD/AAAAWAAAAEoAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAAD9AAAADwAAALMAAADHAAAAAAAAAAMAAAADAAAAAAAAAMcAAAC0AAAABwAAAPgAAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABYAAAASQAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAA/wAAAP0AAAAPAAAAswAAAMcAAAAAAAAAAwAAAAMAAAAAAAAAxwAAALQAAAAHAAAA9wAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAFgAAABKAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD/AAAA/QAAAA8AAACzAAAAxwAAAAAAAAADAAAAAwAAAAAAAADFAAAAswAA
        AAYAAAD3AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPoAAAD/AAAAUgAAAEUAAAD/AAAA+gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD9AAAADwAAALMAAADGAAAAAAAAAAMAAAADAAAAAAAA
        AMcAAACyAAAABQAAAPYAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD6AAAA/wAAAMwAAAAIAAAABAAA
        AMcAAAD/AAAA+gAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAP0AAAAPAAAAswAAAMgAAAAAAAAAAwAA
        AAMAAAAAAAAAqAAAAKUAAAAGAAAA9gAAAP8AAAD+AAAA/wAAAP8AAAD+AAAA+gAAAP8AAADcAAAAHgAA
        AAAAAAAAAAAAGgAAANgAAAD/AAAA+gAAAP4AAAD/AAAA/wAAAP4AAAD/AAAA/QAAABEAAACoAAAApQAA
        AAAAAAADAAAAAAAAAAAAAAAFAAAACwAAABUAAADyAAAA/wAAAP4AAAD+AAAA+wAAAPwAAAD/AAAAzQAA
        ABwAAAAAAAAAAgAAAAIAAAAAAAAAGgAAAM0AAAD/AAAA/AAAAPsAAAD+AAAA/gAAAP8AAAD6AAAAIAAA
        AAgAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAFgAAAO8AAAD+AAAA+wAAAP4AAAD/AAAA/gAA
        AJQAAAAJAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAACQAAAJIAAAD+AAAA/wAAAP4AAAD7AAAA/AAA
        APcAAAAgAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAVAAAA8QAAAP8AAAD/AAAA9AAA
        AKgAAAAyAAAAAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAADEAAACqAAAA9gAA
        AP8AAAD/AAAA+gAAACEAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAACxAAAAmQAA
        AFoAAAAYAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAA
        AAAAAAAbAAAAXQAAAJgAAAC4AAAAGgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAQAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////B//SwAg0qAZmAWLIATSQAAAAkAAAAJAAAACQAAAAkgA
        ABJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkABgAJAAkACkAWgCVAS
        SArQRaIL/JPJP9Av9Avx//+P//////////8=
</value>
  </data>
</root>